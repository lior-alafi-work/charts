# Can be set to true to show debug logging, useful for troubleshooting.
debug: false

httpProxy:
httpsProxy:
noProxy:
sslVerifyCertificate:
# Namespace to deploy to (Optional: Will default to release namespace)
namespace:

# Default values for Sysdig KSPM Collector
global:
  clusterConfig: {}
  sysdig:
    region: "us1"
  sslVerifyCertificate:
  proxy: {}
  kspm:
    deploy: true
  ssl:
    ca:
      # For outbound connections (secure backend, proxy,...)
      # A PEM-encoded x509 certificate.  This can also be a bundle with multiple certificates.
      # See below in the ssl.ca.cert key for an example
      cert: ""

      # Filename that is used when creating the secret.  Required if cert is provided.
      fileName: ""

      # Provide the name of an existing Secret that contains the CA required
      existingCaSecret: ""
      # Provide the filename that is defined inside the existing Secret.  Required if existingCaSecret is set.
      existingCaSecretFileName: ""

      # Provide the name of an existing ConfigMap that contains the CA required
      existingCaConfigMap: ""
      # Provide the filename that is defined inside the existing ConfigMap.  Required if existingCaConfigMap is set.
      existingCaConfigMapFileName: ""

sysdig:
  # Required: You need your Sysdig access key before running agents, either specifying 'accessKey' here, or using 'existingAccessKeySecret'
  accessKey: ""
  # Alternatively, specify the name of a Kubernetes secret containing an 'access-key' entry
  existingAccessKeySecret: ""

# The API endpoint for Sysdig Secure, specified with no protocol:
# * SaaS default region (US East): secure.sysdig.com
# * SaaS US Web: us2.app.sysdig.com
# * SaaS European Union: eu1.app.sysdig.com
# * On-Prem: sysdig.my.company.com
apiEndpoint: ""

# Override value for the NATS service endpoint
natsUrl: ""

# Setting a cluster name allows you to filter events from this cluster using kubernetes.cluster.name
clusterName: ""

image:
  repository: sysdig/kspm-collector
  tag: 1.22.0
  digest:
  registry: quay.io
  pullPolicy: Always

# Set image pull secret name
# Example
# imagePullSecrets:
#   - name: my-super-secret-pull
imagePullSecrets: []

rbac:
  # true here enables creation of rbac resources
  create: true

scc:
  # true here enables creation of Security Context Constraints in Openshift
  create: true

serviceAccount:
  # true here enables creation of service account
  create: true
  # Use this value as kspmCollectorServiceAccountName
  name: "kspm-collector"

replicas: 1

namespaces:
  included: ""
  excluded: ""

nodeSelector: {}

workloads:
  included: ""
  excluded: ""

healthIntervalMin: 5

resources:
  requests:
    cpu: 150m
    memory: 256Mi
  limits:
    cpu: 500m
    memory: 1536Mi

port: 8080

readinessProbe:
  enabled: true
  probe:
    initialDelaySeconds: 90
    periodSeconds: 3
livenessProbe:
  enabled: true
  probe:
    initialDelaySeconds: 90
    periodSeconds: 3

securityContext:
  runAsNonRoot: true
  runAsUser: 10001
  runAsGroup: 10001
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - all

tolerations:
  - key: kubernetes.io/arch
    operator: Equal
    value: arm64
    effect: NoSchedule

# arch and os will be used to template out a node affinity block matching everything in each list. If affinity is
# defined, these fields will be ignored
arch:
  - amd64
  - arm64
os:
  - linux
# Allow the DaemonSet to schedule using affinity rules
# Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
affinity: {}

labels: {}

ssl:
  ca:
    # For outbound connections (secure backend, proxy,...)
    # A PEM-encoded x509 certificate.  This can also be a bundle with multiple certificates.
    cert: ""

    # Example of a certificate
    # cert: |
    #   -----BEGIN CERTIFICATE-----
    #   MIIDEzCCAfugAwIBAgIQKiv9U+KxPJzu1adXwC06RzANBgkqhkiG9w0BAQsFADAU
    #   MRIwEAYDVQQDEwloYXJib3ItY2EwHhcNMjIwMjIzMDY1NjExWhcNMjMwMjIzMDY1
    #   NjExWjAUMRIwEAYDVQQDEwloYXJib3ItY2EwggEiMA0GCSqGSIb3DQEBAQUAA4IB
    #   MMNlTAQ9fvdNOTzZntye0PQYR5SR13E=
    #   -----END CERTIFICATE-----

    # Filename that is used when creating the secret.  Required if cert is provided.
    fileName: ""

    # Provide the name of an existing Secret that contains the CA required
    existingCaSecret: ""
    # Provide the filename that is defined inside the existing Secret.  Required if existingCaSecret is set.
    existingCaSecretFileName: ""

    # Provide the name of an existing ConfigMap that contains the CA required
    existingCaConfigMap: ""
    # Provide the filename that is defined inside the existing ConfigMap.  Required if existingCaConfigMap is set.
    existingCaConfigMapFileName: ""

tests:
  timeout: 300s
  image:
    repo: bitnami/kubectl
    tag: 1.24.4
